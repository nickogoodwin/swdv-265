{"version":3,"names":["PdfViewNative","requireNativeComponent","PdfView","props","onError","onLayout","onLoadComplete","onPdfError","useCallback","event","nativeEvent","onPdfLoadComplete","asPath","annotation","annotationStr","page","resizeMode","source","style"],"sources":["PdfView.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  requireNativeComponent,\n  ViewStyle,\n} from 'react-native';\nimport { asPath } from './Util';\n\nexport type ErrorEvent = { message: string };\n\nexport type LoadCompleteEvent = { height: number; width: number };\n\nexport type ResizeMode = 'contain' | 'fitWidth';\n\ntype PdfViewNativeProps = {\n  annotation?: string;\n  annotationStr?: string;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPdfError: (event: NativeSyntheticEvent<ErrorEvent>) => void;\n  onPdfLoadComplete: (event: NativeSyntheticEvent<LoadCompleteEvent>) => void;\n  page: number;\n  resizeMode?: ResizeMode;\n  source: string;\n  style?: ViewStyle;\n};\n\nexport type PdfViewProps = {\n  /**\n   * PAS v1 annotation JSON string.\n   */\n  annotationStr?: string;\n\n  /**\n   * Path to annotation data.\n   */\n  annotation?: string;\n\n  /**\n   * Callback to handle errors.\n   */\n  onError?: (event: ErrorEvent) => void;\n\n  /**\n   * Callback for measuring the native view.\n   *\n   * Triggers on mount and layout changes.\n   */\n  onLayout?: (event: LayoutChangeEvent) => void;\n\n  /**\n   * Callback to handle pdf load completion.\n   *\n   * Passed the dimensions of the rendered page.\n   */\n  onLoadComplete?: (event: LoadCompleteEvent) => void;\n\n  /**\n   * Page (0-indexed) of document to display.\n   */\n  page: number;\n\n  /**\n   * How pdf page should be scaled to fit in view dimensions.\n   *\n   * `contain`\n   *   - Center and scale to the largest size that does not crop content.\n   * `fitWidth`\n   *   - Scale pdf page so width matches view. If aspect ratio of the pdf\n   *     does not match the view, content will be cropped/space buffered at\n   *     the bottom.\n   */\n  resizeMode?: ResizeMode;\n\n  /**\n   * Document to display.\n   */\n  source: string;\n  style?: ViewStyle;\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: string;\n};\n\nconst PdfViewNative = requireNativeComponent<PdfViewNativeProps>('RNPdfView');\n\n/**\n * Single page of a pdf.\n */\nexport function PdfView(props: PdfViewProps) {\n  const { onError, onLayout, onLoadComplete } = props;\n\n  const onPdfError = useCallback(\n    (event: NativeSyntheticEvent<ErrorEvent>) => {\n      if (onError != null) {\n        onError(event.nativeEvent);\n      }\n    },\n    [onError]\n  );\n  const onPdfLoadComplete = useCallback(\n    (event: NativeSyntheticEvent<LoadCompleteEvent>) => {\n      if (onLoadComplete != null) {\n        onLoadComplete(event.nativeEvent);\n      }\n    },\n    [onLoadComplete]\n  );\n\n  return (\n    <PdfViewNative\n      annotation={asPath(props.annotation)}\n      annotationStr={props.annotationStr}\n      onLayout={onLayout}\n      onPdfError={onPdfError}\n      onPdfLoadComplete={onPdfLoadComplete}\n      page={props.page}\n      resizeMode={props.resizeMode}\n      source={asPath(props.source)}\n      style={props.style}\n    />\n  );\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;;;;;AA+EA,MAAMA,aAAa,GAAG,IAAAC,mCAAA,EAA2C,WAA3C,CAAtB;AAEA;AACA;AACA;;AACO,SAASC,OAAT,CAAiBC,KAAjB,EAAsC;EAC3C,MAAM;IAAEC,OAAF;IAAWC,QAAX;IAAqBC;EAArB,IAAwCH,KAA9C;EAEA,MAAMI,UAAU,GAAG,IAAAC,kBAAA,EAChBC,KAAD,IAA6C;IAC3C,IAAIL,OAAO,IAAI,IAAf,EAAqB;MACnBA,OAAO,CAACK,KAAK,CAACC,WAAP,CAAP;IACD;EACF,CALgB,EAMjB,CAACN,OAAD,CANiB,CAAnB;EAQA,MAAMO,iBAAiB,GAAG,IAAAH,kBAAA,EACvBC,KAAD,IAAoD;IAClD,IAAIH,cAAc,IAAI,IAAtB,EAA4B;MAC1BA,cAAc,CAACG,KAAK,CAACC,WAAP,CAAd;IACD;EACF,CALuB,EAMxB,CAACJ,cAAD,CANwB,CAA1B;EASA,oBACE,6BAAC,aAAD;IACE,UAAU,EAAE,IAAAM,YAAA,EAAOT,KAAK,CAACU,UAAb,CADd;IAEE,aAAa,EAAEV,KAAK,CAACW,aAFvB;IAGE,QAAQ,EAAET,QAHZ;IAIE,UAAU,EAAEE,UAJd;IAKE,iBAAiB,EAAEI,iBALrB;IAME,IAAI,EAAER,KAAK,CAACY,IANd;IAOE,UAAU,EAAEZ,KAAK,CAACa,UAPpB;IAQE,MAAM,EAAE,IAAAJ,YAAA,EAAOT,KAAK,CAACc,MAAb,CARV;IASE,KAAK,EAAEd,KAAK,CAACe;EATf,EADF;AAaD"}