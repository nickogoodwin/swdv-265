{"version":3,"names":["separatorSize","useMeasurePages","layoutWidth","pageDims","maxPageHeight","onMeasurePages","useEffect","measurements","offset","pageSize","itemHeight","Math","min","height","width","push","Pdf","forwardRef","props","ref","onError","onLoadComplete","source","flatListLayout","setFlatListLayout","useState","setPageDims","listRef","useRef","useImperativeHandle","scrollToIndex","index","current","animated","scrollToOffset","state","live","PdfUtil","getPageSizes","then","sizes","length","catch","error","shrinkToFit","Number","MAX_VALUE","getItemLayout","useCallback","data","console","warn","bound","i","onLayout","event","next","nativeEvent","layout","prev","renderItem","styles","pageAlign","maxHeight","annotation","annotationStr","page","generateItemSeparator","stringifyIndex","initialScrollIndex","ListEmptyComponent","onMomentumScrollBegin","onMomentumScrollEnd","onScroll","onScrollBeginDrag","onScrollEndDrag","refreshControl","renderScrollComponent","scrollEventThrottle","StyleSheet","create","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","alignItems","separator","_item","toString"],"sources":["Pdf.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  LayoutChangeEvent,\n  ListRenderItemInfo,\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { PageDim, PdfUtil } from './PdfUtil';\nimport { PdfView } from './PdfView';\n\nexport type PageMeasurement = {\n  /**\n   * Display height of the page.\n   */\n  itemHeight: number;\n\n  /**\n   * Position (dp) within the FlatList.\n   */\n  offset: number;\n};\n\n/**\n * Optional props, forwarded to the underlying `FlatList` component.\n */\ntype BaseListProps = {\n  /**\n   * Instead of starting at the top with the first item, start at\n   * initialScrollIndex.\n   */\n  initialScrollIndex?: number;\n\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render\n   * function, or a rendered element.\n   */\n  ListEmptyComponent?: FlatListProps<PageDim>['ListEmptyComponent'];\n\n  /**\n   * Called when the momentum scroll starts (scroll which occurs as the scroll\n   * view starts gliding).\n   */\n  onMomentumScrollBegin?: (\n    event: NativeSyntheticEvent<NativeScrollEvent>\n  ) => void;\n\n  /**\n   * Called when the momentum scroll ends (scroll which occurs as the scroll\n   * view glides to a stop).\n   */\n  onMomentumScrollEnd?: (\n    event: NativeSyntheticEvent<NativeScrollEvent>\n  ) => void;\n\n  /**\n   * Fires at most once per frame during scrolling. The frequency of the events\n   * can be controlled using the scrollEventThrottle prop.\n   */\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * Called when the user begins to drag the scroll view.\n   */\n  onScrollBeginDrag?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * Called when the user stops dragging the scroll view and it either stops or\n   * begins to glide.\n   */\n  onScrollEndDrag?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * A RefreshControl component, used to provide pull-to-refresh\n   * functionality for the ScrollView.\n   */\n  refreshControl?: FlatListProps<PageDim>['refreshControl'];\n\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: FlatListProps<PageDim>['renderScrollComponent'];\n\n  /**\n   * This controls how often the scroll event will be fired while scrolling\n   * (in events per seconds). A higher number yields better accuracy for code\n   * that is tracking the scroll position, but can lead to scroll performance\n   * problems due to the volume of information being send over the bridge. The\n   * default value is zero, which means the scroll event will be sent only once\n   * each time the view is scrolled.\n   * Only available on iOS.\n   */\n  scrollEventThrottle?: number;\n};\n\ntype PdfProps = BaseListProps & {\n  /**\n   * PAS v1 annotation JSON string.\n   */\n  annotationStr?: string;\n\n  /**\n   * Path to annotation data.\n   */\n  annotation?: string;\n\n  /**\n   * Callback to handle errors.\n   */\n  onError?: (error: Error) => void;\n\n  /**\n   * Callback to handle pdf load completion.\n   *\n   * Passed the page count of the loaded pdf.\n   */\n  onLoadComplete?: (numberOfPages: number) => void;\n\n  /**\n   * Callback to receive layout details of all pages.\n   */\n  onMeasurePages?: (measurements: PageMeasurement[]) => void;\n\n  /**\n   * Size pages such that each page can be displayed without cutoff. Applies\n   * when device is in the specified orientation.\n   */\n  shrinkToFit?: 'never' | 'portrait' | 'landscape' | 'always';\n\n  /**\n   * Document to display.\n   */\n  source: string;\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: string;\n};\n\nexport type PdfRef = {\n  /**\n   * Scroll to the specified page (0-indexed).\n   */\n  scrollToIndex(index: number): void;\n\n  /**\n   * Scroll to the specified offset.\n   */\n  scrollToOffset(offset: number): void;\n};\n\nconst separatorSize = 8;\n\n/**\n * Report measurements of all pages to a callback.\n */\nfunction useMeasurePages(\n  layoutWidth: number,\n  pageDims: PageDim[],\n  maxPageHeight: number,\n  onMeasurePages?: (measurements: PageMeasurement[]) => void\n) {\n  useEffect(() => {\n    if (onMeasurePages == null || layoutWidth === 0) {\n      return;\n    }\n    const measurements: PageMeasurement[] = [];\n    let offset = 0;\n    for (const pageSize of pageDims) {\n      // Measurements include scaling to fill width,\n      const itemHeight = Math.min(\n        maxPageHeight,\n        (layoutWidth * pageSize.height) / pageSize.width\n      );\n      measurements.push({ itemHeight, offset });\n      // and offset for separator between pages.\n      offset += itemHeight + separatorSize;\n    }\n    onMeasurePages(measurements);\n  }, [layoutWidth, maxPageHeight, onMeasurePages, pageDims]);\n}\n\n/**\n * Display a pdf.\n */\nexport const Pdf = forwardRef((props: PdfProps, ref: React.Ref<PdfRef>) => {\n  const { onError, onLoadComplete, source } = props;\n\n  const [flatListLayout, setFlatListLayout] = useState<PageDim>({\n    height: 0,\n    width: 0,\n  });\n  const [pageDims, setPageDims] = useState<PageDim[]>([]);\n\n  const listRef = useRef<FlatList<PageDim>>(null);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToIndex: (index) =>\n        listRef.current?.scrollToIndex({ animated: true, index }),\n      scrollToOffset: (offset) =>\n        listRef.current?.scrollToOffset({ animated: true, offset }),\n    }),\n    [listRef]\n  );\n\n  useEffect(() => {\n    const state = { live: true };\n    PdfUtil.getPageSizes(source)\n      .then((sizes) => {\n        if (state.live) {\n          setPageDims(sizes);\n          if (onLoadComplete != null) {\n            onLoadComplete(sizes.length);\n          }\n        }\n      })\n      .catch((error) => {\n        if (state.live && onError != null) {\n          onError(error);\n        }\n      });\n\n    return () => {\n      state.live = false;\n    };\n  }, [onError, onLoadComplete, setPageDims, source]);\n\n  let maxPageHeight: number | undefined;\n  if (flatListLayout.height > 0) {\n    if (\n      props.shrinkToFit === 'always' ||\n      (flatListLayout.height > flatListLayout.width &&\n        props.shrinkToFit === 'portrait') ||\n      (flatListLayout.height < flatListLayout.width &&\n        props.shrinkToFit === 'landscape')\n    ) {\n      maxPageHeight = flatListLayout.height;\n    }\n  }\n\n  useMeasurePages(\n    flatListLayout.width,\n    pageDims,\n    maxPageHeight ?? Number.MAX_VALUE,\n    props.onMeasurePages\n  );\n\n  const getItemLayout = useCallback(\n    (data: PageDim[] | null | undefined, index: number) => {\n      // Default height, so layout computation will always return non-zero.\n      // This case should never occur.\n      let itemHeight = 100;\n      let offset = (itemHeight + separatorSize) * index;\n      if (data == null) {\n        console.warn('Pdf list getItemLayout() not passed data.');\n      } else if (flatListLayout.height === 0 || flatListLayout.width === 0) {\n        console.warn(\n          'Pdf list getItemLayout() could not determine screen size.'\n        );\n      } else {\n        const bound = maxPageHeight ?? Number.MAX_VALUE;\n        let pageSize = data[index];\n        itemHeight = Math.min(\n          bound,\n          (flatListLayout.width * pageSize.height) / pageSize.width\n        );\n        // Add up the separators and heights of pages before the current page.\n        offset = 0;\n        for (let i = 0; i < index; ++i) {\n          pageSize = data[i];\n          offset +=\n            separatorSize +\n            Math.min(\n              bound,\n              (flatListLayout.width * pageSize.height) / pageSize.width\n            );\n        }\n      }\n      return {\n        length: itemHeight,\n        offset,\n        index,\n      };\n    },\n    [flatListLayout, maxPageHeight]\n  );\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      // For sizing pages to fit width, including on device rotation.\n      const next = event.nativeEvent.layout;\n      setFlatListLayout((prev) => {\n        if (prev.height === next.height && prev.width === next.width) {\n          return prev;\n        }\n        return { height: next.height, width: next.width };\n      });\n    },\n    [setFlatListLayout]\n  );\n\n  const renderItem = useCallback(\n    ({ index }: ListRenderItemInfo<PageDim>) => (\n      <View style={[styles.pageAlign, { maxHeight: maxPageHeight }]}>\n        <View>\n          <PdfView\n            annotation={props.annotation}\n            annotationStr={props.annotationStr}\n            page={index}\n            source={source}\n            style={styles.page}\n          />\n        </View>\n      </View>\n    ),\n    [maxPageHeight, props.annotation, props.annotationStr, source]\n  );\n\n  return (\n    <FlatList\n      data={\n        flatListLayout.height !== 0 || pageDims.length === 0 ? pageDims : []\n      }\n      getItemLayout={getItemLayout}\n      initialNumToRender={1}\n      ItemSeparatorComponent={generateItemSeparator}\n      keyExtractor={stringifyIndex}\n      maxToRenderPerBatch={2}\n      onLayout={onLayout}\n      ref={listRef}\n      renderItem={renderItem}\n      windowSize={5}\n      initialScrollIndex={props.initialScrollIndex}\n      ListEmptyComponent={props.ListEmptyComponent}\n      onMomentumScrollBegin={props.onMomentumScrollBegin}\n      onMomentumScrollEnd={props.onMomentumScrollEnd}\n      onScroll={props.onScroll}\n      onScrollBeginDrag={props.onScrollBeginDrag}\n      onScrollEndDrag={props.onScrollEndDrag}\n      refreshControl={props.refreshControl}\n      renderScrollComponent={props.renderScrollComponent}\n      scrollEventThrottle={props.scrollEventThrottle}\n      testID=\"pdfFlatList\"\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#fff',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  pageAlign: { alignItems: 'center' },\n  separator: { height: separatorSize },\n});\n\nfunction generateItemSeparator() {\n  return <View style={styles.separator} />;\n}\n\nfunction stringifyIndex(_item: unknown, index: number) {\n  return index.toString();\n}\n"],"mappings":"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"}