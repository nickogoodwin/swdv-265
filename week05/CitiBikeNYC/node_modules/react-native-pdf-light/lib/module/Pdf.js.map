{"version":3,"names":["React","forwardRef","useCallback","useEffect","useImperativeHandle","useRef","useState","FlatList","StyleSheet","View","PdfUtil","PdfView","separatorSize","useMeasurePages","layoutWidth","pageDims","maxPageHeight","onMeasurePages","measurements","offset","pageSize","itemHeight","Math","min","height","width","push","Pdf","props","ref","onError","onLoadComplete","source","flatListLayout","setFlatListLayout","setPageDims","listRef","scrollToIndex","index","current","animated","scrollToOffset","state","live","getPageSizes","then","sizes","length","catch","error","shrinkToFit","Number","MAX_VALUE","getItemLayout","data","console","warn","bound","i","onLayout","event","next","nativeEvent","layout","prev","renderItem","styles","pageAlign","maxHeight","annotation","annotationStr","page","generateItemSeparator","stringifyIndex","initialScrollIndex","ListEmptyComponent","onMomentumScrollBegin","onMomentumScrollEnd","onScroll","onScrollBeginDrag","onScrollEndDrag","refreshControl","renderScrollComponent","scrollEventThrottle","create","backgroundColor","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","alignItems","separator","_item","toString"],"sources":["Pdf.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  LayoutChangeEvent,\n  ListRenderItemInfo,\n  NativeScrollEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { PageDim, PdfUtil } from './PdfUtil';\nimport { PdfView } from './PdfView';\n\nexport type PageMeasurement = {\n  /**\n   * Display height of the page.\n   */\n  itemHeight: number;\n\n  /**\n   * Position (dp) within the FlatList.\n   */\n  offset: number;\n};\n\n/**\n * Optional props, forwarded to the underlying `FlatList` component.\n */\ntype BaseListProps = {\n  /**\n   * Instead of starting at the top with the first item, start at\n   * initialScrollIndex.\n   */\n  initialScrollIndex?: number;\n\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render\n   * function, or a rendered element.\n   */\n  ListEmptyComponent?: FlatListProps<PageDim>['ListEmptyComponent'];\n\n  /**\n   * Called when the momentum scroll starts (scroll which occurs as the scroll\n   * view starts gliding).\n   */\n  onMomentumScrollBegin?: (\n    event: NativeSyntheticEvent<NativeScrollEvent>\n  ) => void;\n\n  /**\n   * Called when the momentum scroll ends (scroll which occurs as the scroll\n   * view glides to a stop).\n   */\n  onMomentumScrollEnd?: (\n    event: NativeSyntheticEvent<NativeScrollEvent>\n  ) => void;\n\n  /**\n   * Fires at most once per frame during scrolling. The frequency of the events\n   * can be controlled using the scrollEventThrottle prop.\n   */\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * Called when the user begins to drag the scroll view.\n   */\n  onScrollBeginDrag?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * Called when the user stops dragging the scroll view and it either stops or\n   * begins to glide.\n   */\n  onScrollEndDrag?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n\n  /**\n   * A RefreshControl component, used to provide pull-to-refresh\n   * functionality for the ScrollView.\n   */\n  refreshControl?: FlatListProps<PageDim>['refreshControl'];\n\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: FlatListProps<PageDim>['renderScrollComponent'];\n\n  /**\n   * This controls how often the scroll event will be fired while scrolling\n   * (in events per seconds). A higher number yields better accuracy for code\n   * that is tracking the scroll position, but can lead to scroll performance\n   * problems due to the volume of information being send over the bridge. The\n   * default value is zero, which means the scroll event will be sent only once\n   * each time the view is scrolled.\n   * Only available on iOS.\n   */\n  scrollEventThrottle?: number;\n};\n\ntype PdfProps = BaseListProps & {\n  /**\n   * PAS v1 annotation JSON string.\n   */\n  annotationStr?: string;\n\n  /**\n   * Path to annotation data.\n   */\n  annotation?: string;\n\n  /**\n   * Callback to handle errors.\n   */\n  onError?: (error: Error) => void;\n\n  /**\n   * Callback to handle pdf load completion.\n   *\n   * Passed the page count of the loaded pdf.\n   */\n  onLoadComplete?: (numberOfPages: number) => void;\n\n  /**\n   * Callback to receive layout details of all pages.\n   */\n  onMeasurePages?: (measurements: PageMeasurement[]) => void;\n\n  /**\n   * Size pages such that each page can be displayed without cutoff. Applies\n   * when device is in the specified orientation.\n   */\n  shrinkToFit?: 'never' | 'portrait' | 'landscape' | 'always';\n\n  /**\n   * Document to display.\n   */\n  source: string;\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: string;\n};\n\nexport type PdfRef = {\n  /**\n   * Scroll to the specified page (0-indexed).\n   */\n  scrollToIndex(index: number): void;\n\n  /**\n   * Scroll to the specified offset.\n   */\n  scrollToOffset(offset: number): void;\n};\n\nconst separatorSize = 8;\n\n/**\n * Report measurements of all pages to a callback.\n */\nfunction useMeasurePages(\n  layoutWidth: number,\n  pageDims: PageDim[],\n  maxPageHeight: number,\n  onMeasurePages?: (measurements: PageMeasurement[]) => void\n) {\n  useEffect(() => {\n    if (onMeasurePages == null || layoutWidth === 0) {\n      return;\n    }\n    const measurements: PageMeasurement[] = [];\n    let offset = 0;\n    for (const pageSize of pageDims) {\n      // Measurements include scaling to fill width,\n      const itemHeight = Math.min(\n        maxPageHeight,\n        (layoutWidth * pageSize.height) / pageSize.width\n      );\n      measurements.push({ itemHeight, offset });\n      // and offset for separator between pages.\n      offset += itemHeight + separatorSize;\n    }\n    onMeasurePages(measurements);\n  }, [layoutWidth, maxPageHeight, onMeasurePages, pageDims]);\n}\n\n/**\n * Display a pdf.\n */\nexport const Pdf = forwardRef((props: PdfProps, ref: React.Ref<PdfRef>) => {\n  const { onError, onLoadComplete, source } = props;\n\n  const [flatListLayout, setFlatListLayout] = useState<PageDim>({\n    height: 0,\n    width: 0,\n  });\n  const [pageDims, setPageDims] = useState<PageDim[]>([]);\n\n  const listRef = useRef<FlatList<PageDim>>(null);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToIndex: (index) =>\n        listRef.current?.scrollToIndex({ animated: true, index }),\n      scrollToOffset: (offset) =>\n        listRef.current?.scrollToOffset({ animated: true, offset }),\n    }),\n    [listRef]\n  );\n\n  useEffect(() => {\n    const state = { live: true };\n    PdfUtil.getPageSizes(source)\n      .then((sizes) => {\n        if (state.live) {\n          setPageDims(sizes);\n          if (onLoadComplete != null) {\n            onLoadComplete(sizes.length);\n          }\n        }\n      })\n      .catch((error) => {\n        if (state.live && onError != null) {\n          onError(error);\n        }\n      });\n\n    return () => {\n      state.live = false;\n    };\n  }, [onError, onLoadComplete, setPageDims, source]);\n\n  let maxPageHeight: number | undefined;\n  if (flatListLayout.height > 0) {\n    if (\n      props.shrinkToFit === 'always' ||\n      (flatListLayout.height > flatListLayout.width &&\n        props.shrinkToFit === 'portrait') ||\n      (flatListLayout.height < flatListLayout.width &&\n        props.shrinkToFit === 'landscape')\n    ) {\n      maxPageHeight = flatListLayout.height;\n    }\n  }\n\n  useMeasurePages(\n    flatListLayout.width,\n    pageDims,\n    maxPageHeight ?? Number.MAX_VALUE,\n    props.onMeasurePages\n  );\n\n  const getItemLayout = useCallback(\n    (data: PageDim[] | null | undefined, index: number) => {\n      // Default height, so layout computation will always return non-zero.\n      // This case should never occur.\n      let itemHeight = 100;\n      let offset = (itemHeight + separatorSize) * index;\n      if (data == null) {\n        console.warn('Pdf list getItemLayout() not passed data.');\n      } else if (flatListLayout.height === 0 || flatListLayout.width === 0) {\n        console.warn(\n          'Pdf list getItemLayout() could not determine screen size.'\n        );\n      } else {\n        const bound = maxPageHeight ?? Number.MAX_VALUE;\n        let pageSize = data[index];\n        itemHeight = Math.min(\n          bound,\n          (flatListLayout.width * pageSize.height) / pageSize.width\n        );\n        // Add up the separators and heights of pages before the current page.\n        offset = 0;\n        for (let i = 0; i < index; ++i) {\n          pageSize = data[i];\n          offset +=\n            separatorSize +\n            Math.min(\n              bound,\n              (flatListLayout.width * pageSize.height) / pageSize.width\n            );\n        }\n      }\n      return {\n        length: itemHeight,\n        offset,\n        index,\n      };\n    },\n    [flatListLayout, maxPageHeight]\n  );\n\n  const onLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      // For sizing pages to fit width, including on device rotation.\n      const next = event.nativeEvent.layout;\n      setFlatListLayout((prev) => {\n        if (prev.height === next.height && prev.width === next.width) {\n          return prev;\n        }\n        return { height: next.height, width: next.width };\n      });\n    },\n    [setFlatListLayout]\n  );\n\n  const renderItem = useCallback(\n    ({ index }: ListRenderItemInfo<PageDim>) => (\n      <View style={[styles.pageAlign, { maxHeight: maxPageHeight }]}>\n        <View>\n          <PdfView\n            annotation={props.annotation}\n            annotationStr={props.annotationStr}\n            page={index}\n            source={source}\n            style={styles.page}\n          />\n        </View>\n      </View>\n    ),\n    [maxPageHeight, props.annotation, props.annotationStr, source]\n  );\n\n  return (\n    <FlatList\n      data={\n        flatListLayout.height !== 0 || pageDims.length === 0 ? pageDims : []\n      }\n      getItemLayout={getItemLayout}\n      initialNumToRender={1}\n      ItemSeparatorComponent={generateItemSeparator}\n      keyExtractor={stringifyIndex}\n      maxToRenderPerBatch={2}\n      onLayout={onLayout}\n      ref={listRef}\n      renderItem={renderItem}\n      windowSize={5}\n      initialScrollIndex={props.initialScrollIndex}\n      ListEmptyComponent={props.ListEmptyComponent}\n      onMomentumScrollBegin={props.onMomentumScrollBegin}\n      onMomentumScrollEnd={props.onMomentumScrollEnd}\n      onScroll={props.onScroll}\n      onScrollBeginDrag={props.onScrollBeginDrag}\n      onScrollEndDrag={props.onScrollEndDrag}\n      refreshControl={props.refreshControl}\n      renderScrollComponent={props.renderScrollComponent}\n      scrollEventThrottle={props.scrollEventThrottle}\n      testID=\"pdfFlatList\"\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#fff',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  pageAlign: { alignItems: 'center' },\n  separator: { height: separatorSize },\n});\n\nfunction generateItemSeparator() {\n  return <View style={styles.separator} />;\n}\n\nfunction stringifyIndex(_item: unknown, index: number) {\n  return index.toString();\n}\n"],"mappings":"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"}